#!/usr/bin/env bash

# This script is idempotent.

set -euxo pipefail

CHAIN=$1
DOMAIN=$2
STATS=$3

export DEBIAN_FRONTEND=noninteractive

touch ~/.hushlogin

hostnamectl set-hostname $DOMAIN

apt-get install --yes \
  acl \
  curl \
  postgresql \
  postgresql-contrib \
  ufw \
  vim \
  yasm

apt-get remove --yes --auto-remove

ufw default allow outgoing
ufw default deny incoming

ufw allow http
ufw allow https
ufw allow ssh
ufw allow 3333

if [[ $STATS == 1 ]]; then
  cd ckstats
  
  curl -fsSL https://get.pnpm.io/install.sh | bash
  
  apt-get install --yes \
    postgresql \
    postgresql-contrib \
    nodejs \
    nginx
  
  cd ..
  ./bin/postgres-init
  cd ckstats
 
  pnpm install

  echo DATABASE_URL="postgres://satoshi:nakamoto@localhost:5432/ckstats_db"
  echo SHADOW_DATABASE_URL="postgres://satoshi:nakamoto@localhost:5432/ckstats_db"
  echo API_URL=http://alpha.parasite.dev
  
  pnpm build

  cat << 'EOF' | crontab -
  */1 * * * * cd /root/deploy/parasitepool/pool/ckstats && /usr/local/bin/pnpm seed
  */1 * * * * cd /root/deploy/parasitepool/pool/ckstats && /usr/local/bin/pnpm update-users
  5 */2 * * * cd /root/deploy/parasitepool/pool/ckstats && /usr/local/bin/pnpm cleanup
  5 1 * * * cd /root/deploy/parasitepool/pool/ckstats && /usr/local/bin/pnpm vacuum
  EOF
 
  pnpm start

  exit 0
fi

exit 1

case $CHAIN in
  main)
    ufw allow 8333
    ;;
  regtest)
    ufw allow 18444
    ;;
  signet)
    # Local signet only
    # ufw allow 38333
    ;;
  test)
    ufw allow 18333
    ;;
  testnet4)
    ufw allow 48333
    ;;
  *)
    echo "Unknown chain: $CHAIN"
    exit 1
    ;;
esac

mkdir -p \
  /etc/systemd/system/bitcoind.service.d \
  /etc/systemd/system/ckpool.service.d

OVERRIDE=/etc/systemd/system/ckpool.service.d/override.conf

echo '[Service]' > $OVERRIDE
echo "Environment=CHAIN=$CHAIN" >> $OVERRIDE

cp $OVERRIDE /etc/systemd/system/bitcoind.service.d/override.conf

sed -i -E 's/#?PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
sshd -t
systemctl restart sshd

ufw --force enable

if ! which bitcoind; then
  ./bin/install-bitcoin-core-linux
fi

bitcoind --version

rm -f /var/lib/bitcoind/settings.json

cd ckpool
./autogen.sh
./configure
make
install --backup src/ckpool /usr/local/bin/ckpool
cd ..

if [[ ! -e ~/.cargo/env ]]; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

source ~/.cargo/env

rustup update stable

cd para
cargo build --release
install --backup target/release/para /usr/local/bin/para
cd ..

id --user bitcoin || useradd --system bitcoin
id --user ckpool || useradd --system ckpool

cp deploy/bitcoind.service /etc/systemd/system/

mkdir -p /etc/bitcoin
cp deploy/bitcoin.conf /etc/bitcoin/bitcoin.conf

if [[ ! -e ~/.bitcoin/bitcoin.conf ]]; then
  mkdir -p ~/.bitcoin
  ln -s /etc/bitcoin/bitcoin.conf ~/.bitcoin/bitcoin.conf
fi

journalctl --unit bitcoind --vacuum-time 5m

systemctl daemon-reload
systemctl enable bitcoind
systemctl restart bitcoind

./bin/postgres-init

if [ "$CHAIN" == "signet" ]; then
  git submodule update --init
  cd bitcoin
  cmake -B build
  cmake --build build -j 21
  cd ..
  ./bin/mine
fi

journalctl --unit ckpool --vacuum-time 5m

cp deploy/ckpool.service /etc/systemd/system/

mkdir -p /etc/ckpool
cp deploy/ckpool.conf /etc/ckpool/ckpool.conf

systemctl daemon-reload
systemctl enable ckpool
systemctl restart ckpool

journalctl --unit para --vacuum-time 1s

cp deploy/para.service /etc/systemd/system/

systemctl daemon-reload
systemctl enable para
systemctl restart para

# TODO: add a curl or something that checks that ckpool is running
